select * from project..data;


-- total episodes

select max(ep_no) from project..data;

--total pitches
 
 select count(distinct brand) from project..data;

--pitches converted into deals
  select sum(a.converted_not_converted) funding_received , count(*) total_pitches from(
  select amount_invested_lakhs , case when amount_invested_lakhs > 0 then 1 else 0 end as converted_not_converted 
  from project..data)a;

  -- total males
  select sum(male) from project..data;

  --total females
  select sum(female) from project..data;

  -- gender ratio
  select sum(female)/sum(male) from project..data;

  --total invested amount
   select sum(amount_invested_lakhs) from project..data;

   --average equity taken
   
   --highest deal taken
   select max(amount_invested_lakhs) from project..data;

   --highest equity taken
   select max(equity_taken) from project..data;

   -- total no. of startup which has female contestent

   select sum(a.female_count) from(
   select female, case when female > 0 then 1 else 0 end as female_count from project..data)a;

   -- pitches converted having atleast one women;
   select sum(b.female_count) from(
   select case when a.female > 0 then 1 else 0 end as female_count , a.* from(
   (select * from project..data where deal!= 'No Deal')) a)b;

   -- average amount invested in per deal

   select avg(a.amount_invested_lakhs) amount_invested_per_deal from
   (select * from project..data where deal!= 'No Deal')a;

   -- average age group of contestants

    select avg_age , count(avg_age) cnt from project..data
	group by avg_age
	order by cnt desc;

   -- location group of contestants

   select location , count(location) cnt from project..data
   group by location 
   order by cnt desc;

   -- Sector group of contestants

   select sector , count(sector) cnt from project..data
   group by sector 
   order by cnt desc;

   -- partners deal

   select partners, count(partners) cnt from project..data where partners!='-'  group by partners order by cnt desc;


   -- making the matrix


select * from project..data

select 'Ashnner' as keyy,count(ashneer_amount_invested) from project..data where ashneer_amount_invested is not null


select 'Ashnner' as keyy,count(ashneer_amount_invested) from project..data where ashneer_amount_invested is not null AND ashneer_amount_invested!=0

SELECT 'Ashneer' as keyy,SUM(C.ASHNEER_AMOUNT_INVESTED),AVG(C.ASHNEER_EQUITY_TAKENP) 
FROM (SELECT * FROM PROJECT..DATA  WHERE ASHNEER_EQUITY_TAKENP!=0 AND ASHNEER_EQUITY_TAKENP IS NOT NULL) C


select m.keyy,m.total_deals_present,m.total_deals,n.total_amount_invested,n.avg_equity_taken from

(select a.keyy,a.total_deals_present,b.total_deals from(

select 'Ashneer' as keyy,count(ashneer_amount_invested) total_deals_present from project..data where ashneer_amount_invested is not null) a

inner join (
select 'Ashneer' as keyy,count(ashneer_amount_invested) total_deals from project..data 
where ashneer_amount_invested is not null AND ashneer_amount_invested!=0) b 

on a.keyy=b.keyy) m

inner join 

(SELECT 'Ashneer' as keyy,SUM(C.ASHNEER_AMOUNT_INVESTED) total_amount_invested,
AVG(C.ASHNEER_EQUITY_TAKENP) avg_equity_taken
FROM (SELECT * FROM PROJECT..DATA  WHERE ASHNEER_EQUITY_TAKENP!=0 AND ASHNEER_EQUITY_TAKENP IS NOT NULL) C) n

on m.keyy=n.keyy

-- which is the startup in which the highest amount has been invested in each domain/sector




select c.* from 
(select brand,sector,amount_invested_lakhs,rank() over(partition by sector order by amount_invested_lakhs desc) rnk 

from project..data) c

where c.rnk=1
